#!groovy
// Update WP properties
properties([disableConcurrentBuilds()])
    parameters {
        string(Name: 'site', description: 'Укажите сайт')
        choice(Name: 'wp_ver', description: 'Какую версию WP установить')
    }
def WP = "https://wordpress.org/wordpress-${wp_ver}.zip"
def WPZIP = "wordpress-${wp_ver}.zip"
def WORKDIR = "/var/www/html/${params.site}"

pipeline {
         agent {
            label 'master'
         }
        options {
            buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
            timestamps()
        }

   stages {

        stage("Check ver. WP") {
            steps {
                sh """
                sed -i 's/site/${params.site}/g' /var/lib/jenkins/jobs/Update_WP/check_wp_ver.sh
                bash /var/lib/jenkins/jobs/Update_WP/check_wp_ver.sh
                sed -i 's/${params.site}/site/g' /var/lib/jenkins/jobs/Update_WP/check_wp_ver.sh
                sleep 5
                """
            }
        }

        stage("Update WP") {
           environment {
            WP_VER = "${sh(script: 'cat /var/lib/jenkins/jobs/Update_WP/wp_version.txt', returnStdout: true).trim()}"
           }

            steps {
              script {
                if (env.WP_VER == "${wp_ver}") {
                   echo "NEW VERSION WP"
                   slackSend color: '#68ff33', message: "CURRENT WP VERSION - ${wp_ver} - ${params.site}"
                }else{
                 slackSend color: '#0000FF', message: "WP VERSION ${wp_ver} - UPDATING - ${params.site}"
                 sh """
                 ssh root@${params.site} 'mkdir -p /opt/wp && tar -cvzf /opt/wp/${params.site}_`date +%d.%m.%y`.tar --exclude /var/www/html/${params.site}/.git /var/www/html/${params.site}/*'
                 ssh root@${params.site} 'cd /opt/wp/ && rm -rf /opt/wp/wordpress && wget $WP && unzip $WPZIP && rm $WPZIP '
                 ssh root@${params.site} 'cd /opt/wp/ && cp -f -r  wordpress/. $WORKDIR && rm -Rf wordpress/'
                 ssh root@${params.site} 'chown -R root:root $WORKDIR'
                 """
                 }
              }
           }
        }
    }

        post {
             success {
                  slackSend channel: '#update_wp',
                  color: 'good',
                  message: "${params.site} update completed successfully."
             }
            failure {
                  slackSend channel: '#update_wp',
                  color: '#FF0000',
                  message: "${params.site} update failure."
            }
        }
 }

