#!groovy
// Update WP properties

properties([disableConcurrentBuilds()])

    parameters {
        string(Name: 'site', description: 'На каком сайте обновить WP')
        string(Name: 'wpver', description: 'Какую версию WP установить')

    }

def WP = "https://wordpress.org/wordpress-${wpver}.zip"
def WPZIP = "wordpress-${wpver}.zip"
def WORKDIR = "/var/www/html/${params.site}"

pipeline {
         agent {
            label 'master'
         }

        options {
            buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
            timestamps()
        }

        environment {
            WP_VER = "${sh(script: 'cat /var/lib/jenkins/jobs/Update_WP/wp_version.txt', returnStdout: true).trim()}"
        }

   stages {

        stage("Update WP") {
            steps {
                sh """
                sed -i 's/site/${params.site}/' ./check_wp_ver.sh
                bash check_wp_ver.sh
                sed -i 's/${params.site}/site/' ./check_wp_ver.sh
                """
              script {
                if (env.WP_VER == '${wpver}') {
                   echo "NEW VERSION WP"
                   slackSend color: '#68ff33', message: "CURRENT WP VERSION - ${params.site}"
                }else{
                 slackSend color: '#ff4233', message: "WP VERSION ${wpver} - UPDATING - ${params.site}"
                 sh """
                 ssh root@${params.site} 'mkdir -p /opt/wp && tar -cvzf /opt/wp/${params.site}+%d-%a-%R.tar --exclude /var/www/html/${params.site}/.git /var/www/html/${params.site}/*'
                 ssh root@${params.site} 'cd /opt/wp/ && rm -rf /opt/wp/wordpress && wget $WP && unzip $WPZIP && rm $WPZIP '
                 ssh root@${params.site} 'cd /opt/wp/ && cp -f -r  wordpress/. $WORKDIR && rm -Rf wordpress/'
                 ssh root@${params.site} 'chown -R root:root $WORKDIR'
                 """
                 }
              }
           }
        }
    }
 }


